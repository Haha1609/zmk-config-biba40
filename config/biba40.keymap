/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define DEFAULT 0
#define LOWER  1
#define RAISE  2
#define ADJUST 3
#define FUNCTION 4

/* NOTE: At the time of the creation of this keymap, there are no specified codes for 'eisuu' and 'kana' input in ZMK.
However, 'LANG1' and 'LANG2' are fully-functioning candidates for 'kana' and 'eisuu' input respectively.
As such, those are in use within the default layer at this time.*/

&soft_off {
    hold-time-ms = <3000>; // Only turn off it the key is held for 3 seconds or longer.
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // |  GRAVE |  F1   |  F2   |  F3   |  F4   |  F5   |   UP   |                    |   UP   |  F6   |  F7   |  F8   |  F9   |  F10  |
            // |  ESC   |  N1   |  N2   |  N3   |  N4   |  N5   | RIGHT  |                    | RIGHT  |  N6   |  N7   |  N8   |  N9   |  N0   |
            // |  TAB   |  Q    |  W    |  E    |  R    |  T    |  ENTER |                    | ENTER  |  Y    |  U    |  I    |  O    |  P    |
            // | CAPS   |  A    |  S    |  D    |  F    |  G    |  LEFT  |                    | LEFT   |  H    |  J    |  K    |  L    |  ;    |
            // | LSHIFT |  Z    |  X    |  C    |  V    |  B    | DOWN   |                    | DOWN   |  N    |  M    |  ,    |  .    |  /    |
            // | LCTRL  | LGUI  | LALT  | SPACE |  MO1  | SPACE | ENTER  |                    | ENTER  | SPACE | ENTER |  MO2  | RSFT  | RCTRL |

            bindings = <
&kp ESC    &kp F1    &kp F2    &kp F3     &kp F4     &kp F5     &kp UP     &kp UP     &kp F6     &kp F7     &kp F8     &kp F9   &kp F10   &kp F11
&kp MINUS  &kp N1    &kp N2    &kp N3     &kp N4     &kp N5     &kp RIGHT  &kp RIGHT  &kp N6     &kp N7     &kp N8     &kp N9   &kp N0    &kp EQUAL
&kp TAB    &kp Q     &kp W     &kp E      &kp R      &kp T      &kp RET    &kp RET    &kp Y      &kp U      &kp I      &kp O    &kp P     &kp BSPC
&kp CAPS   &kp A     &kp S     &kp D      &kp F      &kp G      &kp LEFT   &kp LEFT   &kp H      &kp J      &kp K      &kp L    &kp SEMI  &kp APOS
&kp LSHFT  &kp Z     &kp X     &kp C      &kp V      &kp B      &kp DOWN   &kp DOWN   &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
&kp LCTRL  &kp LGUI  &kp LALT  &mkp LCLK  &mkp RCLK  &kp SPACE  &kp ENTER  &kp ENTER  &kp SPACE  &mkp LCLK  &mkp RCLK  &kp DEL  &kp RALT  &kp RCTRL
            >;
        };

        lower_layer {
            // |  GRAVE |  F1   |  F2   |  F3   |  F4   |  F5   |   UP   |                    |   UP   |  F6   |  F7   |  F8   |  F9   |  F10  |
            // |  ESC   |  N1   |  N2   |  N3   |  N4   |  N5   | RIGHT  |                    | RIGHT  |  N6   |  N7   |  N8   |  N9   |  N0   |
            // |  TAB   |  Q    |  W    |  E    |  R    |  T    |  ENTER |                    | ENTER  |  Y    |  U    |  I    |  O    |  P    |
            // | CAPS   |  A    |  S    |  D    |  F    |  G    |  LEFT  |                    | LEFT   |  H    |  J    |  K    |  L    |  ;    |
            // | LSHIFT |  Z    |  X    |  C    |  V    |  B    | DOWN   |                    | DOWN   |  N    |  M    |  ,    |  .    |  /    |
            // | LCTRL  | LGUI  | LALT  | SPACE |  MO1  | SPACE | ENTER  |                    | ENTER  | SPACE | ENTER |  MO2  | RSFT  | RCTRL |

            bindings = <
&kp ESC        &kp F1    &kp F2        &kp F3     &kp F4     &kp F5     &kp UP     &kp UP     &kp F6     &kp F7     &kp F8     &kp F9   &kp F10         &kp F11
&kp MINUS      &kp N1    &kp N2        &kp N3     &kp N4     &kp N5     &kp RIGHT  &kp RIGHT  &kp N6     &kp N7     &kp N8     &kp N9   &kp N0          &kp EQUAL
&kp TAB        &kp Q     &kp W         &kp E      &kp R      &kp T      &kp RET    &kp RET    &kp Y      &kp U      &kp I      &kp O    &kp P           &kp BSPC
&kp CAPS       &kp A     &kp S         &kp D      &kp F      &kp G      &kp LEFT   &kp LEFT   &kp H      &kp J      &kp K      &kp L    &kp SEMI        &kp APOS
&kp LS(LSHFT)  &kp Z     &kp X         &kp C      &kp V      &kp B      &kp DOWN   &kp DOWN   &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH        &kp RS(ENTER)
&kp LC(LCTRL)  &kp LGUI  &kp LA(LALT)  &mkp LCLK  &mkp RCLK  &kp SPACE  &kp ENTER  &kp ENTER  &kp SPACE  &mkp LCLK  &mkp RCLK  &kp DEL  &kp RA(DELETE)  &kp RC(RCTRL)
            >;
        };

        raise_layer {
            // |  GRAVE |  F1   |  F2   |  F3   |  F4   |  F5   |   UP   |                    |   UP   |  F6   |  F7   |  F8   |  F9   |  F10  |
            // |  ESC   |  N1   |  N2   |  N3   |  N4   |  N5   | RIGHT  |                    | RIGHT  |  N6   |  N7   |  N8   |  N9   |  N0   |
            // |  TAB   |  Q    |  W    |  E    |  R    |  T    |  ENTER |                    | ENTER  |  Y    |  U    |  I    |  O    |  P    |
            // | CAPS   |  A    |  S    |  D    |  F    |  G    |  LEFT  |                    | LEFT   |  H    |  J    |  K    |  L    |  ;    |
            // | LSHIFT |  Z    |  X    |  C    |  V    |  B    | DOWN   |                    | DOWN   |  N    |  M    |  ,    |  .    |  /    |
            // | LCTRL  | LGUI  | LALT  | SPACE |  MO1  | SPACE | ENTER  |                    | ENTER  | SPACE | ENTER |  MO2  | RSFT  | RCTRL |

            bindings = <
&kp ESC        &kp F1    &kp F2        &kp F3     &kp F4     &kp F5     &kp UP     &kp UP     &kp F6     &kp F7     &kp F8     &kp F9   &kp F10         &kp F11
&kp MINUS      &kp N1    &kp N2        &kp N3     &kp N4     &kp N5     &kp RIGHT  &kp RIGHT  &kp N6     &kp N7     &kp N8     &kp N9   &kp N0          &kp EQUAL
&kp TAB        &kp Q     &kp W         &kp E      &kp R      &kp T      &kp RET    &kp RET    &kp Y      &kp U      &kp I      &kp O    &kp P           &kp BSPC
&kp CAPS       &kp A     &kp S         &kp D      &kp F      &kp G      &kp LEFT   &kp LEFT   &kp H      &kp J      &kp K      &kp L    &kp SEMI        &kp APOS
&kp LS(LSHFT)  &kp Z     &kp X         &kp C      &kp V      &kp B      &kp DOWN   &kp DOWN   &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH        &kp RS(ENTER)
&kp LC(LCTRL)  &kp LGUI  &kp LA(LALT)  &mkp LCLK  &mkp RCLK  &kp SPACE  &kp ENTER  &kp ENTER  &kp SPACE  &mkp LCLK  &mkp RCLK  &kp DEL  &kp RA(DELETE)  &kp RC(RCTRL)
            >;
        };

        adjust_layer {
            // |  GRAVE |  F1   |  F2   |  F3   |  F4   |  F5   |   UP   |                    |   UP   |  F6   |  F7   |  F8   |  F9   |  F10  |
            // |  ESC   |  N1   |  N2   |  N3   |  N4   |  N5   | RIGHT  |                    | RIGHT  |  N6   |  N7   |  N8   |  N9   |  N0   |
            // |  TAB   |  Q    |  W    |  E    |  R    |  T    |  ENTER |                    | ENTER  |  Y    |  U    |  I    |  O    |  P    |
            // | CAPS   |  A    |  S    |  D    |  F    |  G    |  LEFT  |                    | LEFT   |  H    |  J    |  K    |  L    |  ;    |
            // | LSHIFT |  Z    |  X    |  C    |  V    |  B    | DOWN   |                    | DOWN   |  N    |  M    |  ,    |  .    |  /    |
            // | LCTRL  | LGUI  | LALT  | SPACE |  MO1  | SPACE | ENTER  |                    | ENTER  | SPACE | ENTER |  MO2  | RSFT  | RCTRL |

            bindings = <
&kp ESC        &kp F1    &kp F2        &kp F3     &kp F4     &kp F5     &kp UP     &kp UP     &kp F6     &kp F7     &kp F8     &kp F9   &kp F10         &kp F11
&kp MINUS      &kp N1    &kp N2        &kp N3     &kp N4     &kp N5     &kp RIGHT  &kp RIGHT  &kp N6     &kp N7     &kp N8     &kp N9   &kp N0          &kp EQUAL
&kp TAB        &kp Q     &kp W         &kp E      &kp R      &kp T      &kp RET    &kp RET    &kp Y      &kp U      &kp I      &kp O    &kp P           &kp BSPC
&kp CAPS       &kp A     &kp S         &kp D      &kp F      &kp G      &kp LEFT   &kp LEFT   &kp H      &kp J      &kp K      &kp L    &kp SEMI        &kp APOS
&kp LS(LSHFT)  &kp Z     &kp X         &kp C      &kp V      &kp B      &kp DOWN   &kp DOWN   &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH        &kp RS(ENTER)
&kp LC(LCTRL)  &kp LGUI  &kp LA(LALT)  &mkp LCLK  &mkp RCLK  &kp SPACE  &kp ENTER  &kp ENTER  &kp SPACE  &mkp LCLK  &mkp RCLK  &kp DEL  &kp RA(DELETE)  &kp RC(RCTRL)
            >;
        };

        function_layer {
            // |  GRAVE |  F1   |  F2   |  F3   |  F4   |  F5   |   UP   |                    |   UP   |  F6   |  F7   |  F8   |  F9   |  F10  |
            // |  ESC   |  N1   |  N2   |  N3   |  N4   |  N5   | RIGHT  |                    | RIGHT  |  N6   |  N7   |  N8   |  N9   |  N0   |
            // |  TAB   |  Q    |  W    |  E    |  R    |  T    |  ENTER |                    | ENTER  |  Y    |  U    |  I    |  O    |  P    |
            // | CAPS   |  A    |  S    |  D    |  F    |  G    |  LEFT  |                    | LEFT   |  H    |  J    |  K    |  L    |  ;    |
            // | LSHIFT |  Z    |  X    |  C    |  V    |  B    | DOWN   |                    | DOWN   |  N    |  M    |  ,    |  .    |  /    |
            // | LCTRL  | LGUI  | LALT  | SPACE |  MO1  | SPACE | ENTER  |                    | ENTER  | SPACE | ENTER |  MO2  | RSFT  | RCTRL |

            bindings = <
&kp ESC        &kp F1    &kp F2        &kp F3     &kp F4     &kp F5     &kp UP     &kp UP     &kp F6     &kp F7     &kp F8     &kp F9   &kp F10         &kp F11
&kp MINUS      &kp N1    &kp N2        &kp N3     &kp N4     &kp N5     &kp RIGHT  &kp RIGHT  &kp N6     &kp N7     &kp N8     &kp N9   &kp N0          &kp EQUAL
&kp TAB        &kp Q     &kp W         &kp E      &kp R      &kp T      &kp RET    &kp RET    &kp Y      &kp U      &kp I      &kp O    &kp P           &kp BSPC
&kp CAPS       &kp A     &kp S         &kp D      &kp F      &kp G      &kp LEFT   &kp LEFT   &kp H      &kp J      &kp K      &kp L    &kp SEMI        &kp APOS
&kp LS(LSHFT)  &kp Z     &kp X         &kp C      &kp V      &kp B      &kp DOWN   &kp DOWN   &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH        &kp RS(ENTER)
&kp LC(LCTRL)  &kp LGUI  &kp LA(LALT)  &mkp LCLK  &mkp RCLK  &kp SPACE  &kp ENTER  &kp ENTER  &kp SPACE  &mkp LCLK  &mkp RCLK  &kp DEL  &kp RA(DELETE)  &kp RC(RCTRL)
            >;
        };
    };
};
